package practice;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.TimeZone;

public class Pr01_days27 {

	public static void main(String[] args) {
		// Ex01.java을 읽어서 File f1 객체로 만들고 읽기 작업(Input)해서 화면 출력(Ouput)하기
		// String pathName = ".\\src\\days27\\Ex01.java";
		// String copyPath = "C:\\Users\\Yelin Park\\Desktop\\Pr01_days27_Ex06_03.java";
		
		String currentPath = System.getProperty("user.dir");
		File cf = new File(currentPath);
		File[] cArr = cf.listFiles();
		
		// 1. 유형 확인해서 출력하기
		for (int i = 0; i < cArr.length; i++) {
			if(cArr[i].isFile()) {
				System.out.print("[파일]");
			} else if(cArr[i].isDirectory()) {
				System.out.print("[폴더]");
			}
			
			// 2. 파일명 출력
			System.out.printf("\t%s", cArr[i].getName());
			
			// 3. 마지막 수정된 날짜 출력하기
			long date = cArr[i].lastModified();
			LocalDateTime dt = LocalDateTime.ofInstant(Instant.ofEpochMilli(date), TimeZone.getDefault().toZoneId());
			String pattern = "yyyy-MM-dd a hh:mm";
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern(pattern);
			String lastM = formatter.format(dt);
			System.out.print("\t" + lastM);

			// 4. 파일 크기 출력
			System.out.print("\t" + cArr[i].length() + "bytes");
		
			System.out.println();
		} // for i
		
		// fileCopy(pathName, copyPath);

	} // main

	private static void fileCopy(String pathName, String copyPath) {
		File f1 = new File(pathName);
		
		String line;
		int lineNum = 1;

		try (FileReader fr = new FileReader(f1); FileWriter fw = new FileWriter(copyPath);
			 BufferedReader br = new BufferedReader(fr); BufferedWriter bw = new BufferedWriter(fw);) {
			while ((line = br.readLine()) != null) {
				fw.write(lineNum++ + ":" + line + "\r\n");
			}
			System.out.println(f1.getName() + "복사 완료 " + f1.length() + "bytes");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

	} // fileCopy

} // class
